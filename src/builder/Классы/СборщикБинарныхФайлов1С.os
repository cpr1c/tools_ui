#Использовать tempfiles
#Использовать logos
#Использовать v8runner
#Использовать fs
#Использовать 1commands

Перем ПутьКПлатформе1С;
Перем СборкаЧерезУтилитуАвтономногоСервера;
Перем ИмяФайлаУтилитыАвтономногоСервера;
Перем ИмяФайлаЗапускаКонфигуратора;

Перем ИмяФайлаМинимальнойКонфигурации;
Перем ИмяКаталогаВременнойБазы;

Перем Лог;
Перем МенеджерВременныхФайлов;

Процедура УстановитьПутьКПлатформе1С(НовыйПуть) Экспорт
	ПутьКПлатформе1С = НовыйПуть;
	
	ИмяФайлаУтилитыАвтономногоСервера = ОбъединитьПути(ПутьКПлатформе1С, "ibcmd"+?(ОбщиеМетоды.ЭтоWindows(),".exe",""));
	
	ФайлУтилиты = Новый Файл(ИмяФайлаУтилитыАвтономногоСервера);
	СборкаЧерезУтилитуАвтономногоСервера = ФайлУтилиты.Существует();
	
	ИмяФайлаЗапускаКонфигуратора = ОбъединитьПути(ПутьКПлатформе1С,"1cv8"+?(ОбщиеМетоды.ЭтоWindows(),".exe",""));
КонецПроцедуры


Процедура ВыполнитьСозданиеБинарногоФайлаРасширения(КаталогИсходныхФайловРасширения,ИмяФайлаРасширения, ИмяРасширенияВБазе) Экспорт
	ИмяКаталогаВременнойБазы = МенеджерВременныхФайлов.СоздатьКаталог();
	ФС.ОбеспечитьКаталог(ИмяКаталогаВременнойБазы);
	Если СборкаЧерезУтилитуАвтономногоСервера Тогда
		Лог.Информация(СтрШаблон("Создаю временную базу %1", ИмяКаталогаВременнойБазы));
		АвтономныйСоздатьФайловуюБазу(ИмяКаталогаВременнойБазы);
		
		Лог.Информация(СтрШаблон("Загружаю исходные файлы в базу"));
		АвтономныйЗагрузитьКонфигурациюИзФайлов(КаталогИсходныхФайловРасширения, ИмяРасширенияВБазе);
		АвтономныйВыгрузитьКонфигурациюВФайл(ИмяФайлаРасширения, ИмяРасширенияВБазе, Истина);
		
	Иначе
		
		Конфигуратор = Новый УправлениеКонфигуратором();
		Если ЗначениеЗаполнено(ИмяФайлаЗапускаКонфигуратора) Тогда
			Конфигуратор.ПутьКПлатформе1С(ИмяФайлаЗапускаКонфигуратора);
		КонецЕсли;
		Лог.Информация(СтрШаблон("Создаю временную базу %1", ИмяКаталогаВременнойБазы));
		Конфигуратор.СоздатьФайловуюБазу(ИмяКаталогаВременнойБазы);
		
		Конфигуратор.УстановитьКонтекст("/F" + ИмяКаталогаВременнойБазы, "", "");
		
		Лог.Информация(СтрШаблон("Загружаю исходные файлы в базу"));
		Конфигуратор.ЗагрузитьРасширениеИзФайлов(КаталогИсходныхФайловРасширения, "УниверсальныеИнструменты");
		
		Конфигуратор.ВыгрузитьРасширениеВФайл(ИмяФайлаРасширения,  "УниверсальныеИнструменты");
		
	КонецЕсли;
	МенеджерВременныхФайлов.Удалить();
	УдалитьФайлы(МенеджерВременныхФайлов.БазовыйКаталог);
	
КонецПроцедуры	

Процедура УстановитьЛог(НовыйЛог) Экспорт
	Лог=НовыйЛог;
КонецПроцедуры

Процедура УстановитьКаталогВременныхФайлов(КаталогВременныхФайлов) Экспорт
	МенеджерВременныхФайлов.БазовыйКаталог = КаталогВременныхФайлов;
КонецПроцедуры

#Область УтилитаУправленияАвтономнымСервером

Процедура ВыполнитьКомандуЗапускаАвтономногоСервера(ПараметрыЗапуска)
	Команда = Новый Команда;
	Команда.ДобавитьЛогВыводаКоманды(Лог);
	Команда.УстановитьКоманду(""""+ИмяФайлаУтилитыАвтономногоСервера+"""");
	Для Каждого ТекПараметр Из ПараметрыЗапуска Цикл
		Команда.ДобавитьПараметр(ТекПараметр);
	КонецЦикла;
	Команда.ДобавитьПараметр("--db-path="""+ИмяКаталогаВременнойБазы+"""");
	
	Команда.ПоказыватьВыводНемедленно(Истина);    
	Команда.УстановитьКодировкуВывода(КодировкаТекста.UTF8);
	
	КодВозврата = Команда.Исполнить();
	
	Если КодВозврата <> 0 Тогда
		ВызватьИсключение "Ошибка исполнения команды запуска утилиты автономного сервера ";
	КонецЕсли;
	
КонецПроцедуры

Процедура АвтономныйСоздатьФайловуюБазу(ПутьКБазе, ЗагружатьМинимальнуюКонфигурацию = Ложь) 
	ПараметрыЗапуска = Новый Массив;
	ПараметрыЗапуска.Добавить("infobase");
	ПараметрыЗапуска.Добавить("create");
	ПараметрыЗапуска.Добавить("--create-database");
	ПараметрыЗапуска.Добавить("--force");
	ПараметрыЗапуска.Добавить("--apply");
	
	Если ЗагружатьМинимальнуюКонфигурацию Тогда
		ПараметрыЗапуска.Добавить("--load="""+ИмяФайлаМинимальнойКонфигурации+"""");
	КонецЕсли;
	
	ВыполнитьКомандуЗапускаАвтономногоСервера(ПараметрыЗапуска);
КонецПроцедуры

Процедура АвтономныйЗагрузитьКонфигурациюИзФайлов(КаталогВыгрузки, ИмяРасширения = "")
	ПараметрыЗапуска = Новый Массив;
	ПараметрыЗапуска.Добавить("infobase");
	ПараметрыЗапуска.Добавить("config");
	ПараметрыЗапуска.Добавить("import");
	
	Если ЗначениеЗаполнено(ИмяРасширения) Тогда
		ПараметрыЗапуска.Добавить("--extension="+ИмяРасширения);
	КонецЕсли;
	
	ПараметрыЗапуска.Добавить(""""+КаталогВыгрузки+"""");
	
	ВыполнитьКомандуЗапускаАвтономногоСервера(ПараметрыЗапуска);
КонецПроцедуры

Процедура АвтономныйВыгрузитьКонфигурациюВФайл(ФайлВыгрузки, ИмяРасширения = "", ОсновнаяКонфигурация = Ложь)
	ПараметрыЗапуска = Новый Массив;
	ПараметрыЗапуска.Добавить("infobase");
	ПараметрыЗапуска.Добавить("config");
	ПараметрыЗапуска.Добавить("save");
	Если ОсновнаяКонфигурация Тогда
		ПараметрыЗапуска.Добавить("--staging");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяРасширения) Тогда
		ПараметрыЗапуска.Добавить("--extension="+ИмяРасширения);
	КонецЕсли;
	
	ПараметрыЗапуска.Добавить(""""+ФайлВыгрузки+"""");
	
	ВыполнитьКомандуЗапускаАвтономногоСервера(ПараметрыЗапуска);
КонецПроцедуры

Процедура АвтономныйОбновитьконфигурациюИБ(ИмяРасширения = "")
	ПараметрыЗапуска = Новый Массив;
	ПараметрыЗапуска.Добавить("infobase");
	ПараметрыЗапуска.Добавить("config");
	ПараметрыЗапуска.Добавить("apply");
	ПараметрыЗапуска.Добавить("--force");
	
	Если ЗначениеЗаполнено(ИмяРасширения) Тогда
		ПараметрыЗапуска.Добавить("--extension="+ИмяРасширения);
	КонецЕсли;
	
	ВыполнитьКомандуЗапускаАвтономногоСервера(ПараметрыЗапуска);
КонецПроцедуры

#КонецОбласти

ПутьКПлатформе1С = "";
СборкаЧерезУтилитуАвтономногоСервера = Ложь;

Лог = Новый Лог("app.build.tools_ui_1c");
МенеджерВременныхФайлов = Новый МенеджерВременныхФайлов();

ИмяФайлаМинимальнойКонфигурации = ОбъединитьПути(ТекущийСценарий().Каталог, "..","Шаблоны","МинимальнаяКонфигурацияДляРазработки.cf");